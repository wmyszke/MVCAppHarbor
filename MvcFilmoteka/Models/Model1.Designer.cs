//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("FilmModel", "aktor_fk", "Aktor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MvcFilmoteka.Models.Aktor), "film_aktor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MvcFilmoteka.Models.film_aktor), true)]
[assembly: EdmRelationshipAttribute("FilmModel", "film_fk", "Film", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MvcFilmoteka.Models.Film), "film_aktor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MvcFilmoteka.Models.film_aktor), true)]

#endregion

namespace MvcFilmoteka.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class FilmEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new FilmEntities object using the connection string found in the 'FilmEntities' section of the application configuration file.
        /// </summary>
        public FilmEntities() : base("name=FilmEntities", "FilmEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new FilmEntities object.
        /// </summary>
        public FilmEntities(string connectionString) : base(connectionString, "FilmEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new FilmEntities object.
        /// </summary>
        public FilmEntities(EntityConnection connection) : base(connection, "FilmEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Aktor> Aktors
        {
            get
            {
                if ((_Aktors == null))
                {
                    _Aktors = base.CreateObjectSet<Aktor>("Aktors");
                }
                return _Aktors;
            }
        }
        private ObjectSet<Aktor> _Aktors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Film> Films
        {
            get
            {
                if ((_Films == null))
                {
                    _Films = base.CreateObjectSet<Film>("Films");
                }
                return _Films;
            }
        }
        private ObjectSet<Film> _Films;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<film_aktor> film_aktor
        {
            get
            {
                if ((_film_aktor == null))
                {
                    _film_aktor = base.CreateObjectSet<film_aktor>("film_aktor");
                }
                return _film_aktor;
            }
        }
        private ObjectSet<film_aktor> _film_aktor;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Aktors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAktors(Aktor aktor)
        {
            base.AddObject("Aktors", aktor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Films EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFilms(Film film)
        {
            base.AddObject("Films", film);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the film_aktor EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTofilm_aktor(film_aktor film_aktor)
        {
            base.AddObject("film_aktor", film_aktor);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FilmModel", Name="Aktor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Aktor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Aktor object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="imie">Initial value of the Imie property.</param>
        /// <param name="nazwisko">Initial value of the Nazwisko property.</param>
        public static Aktor CreateAktor(global::System.Int32 id, global::System.String imie, global::System.String nazwisko)
        {
            Aktor aktor = new Aktor();
            aktor.id = id;
            aktor.Imie = imie;
            aktor.Nazwisko = nazwisko;
            return aktor;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Imie
        {
            get
            {
                return _Imie;
            }
            set
            {
                OnImieChanging(value);
                ReportPropertyChanging("Imie");
                _Imie = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Imie");
                OnImieChanged();
            }
        }
        private global::System.String _Imie;
        partial void OnImieChanging(global::System.String value);
        partial void OnImieChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nazwisko
        {
            get
            {
                return _Nazwisko;
            }
            set
            {
                OnNazwiskoChanging(value);
                ReportPropertyChanging("Nazwisko");
                _Nazwisko = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nazwisko");
                OnNazwiskoChanged();
            }
        }
        private global::System.String _Nazwisko;
        partial void OnNazwiskoChanging(global::System.String value);
        partial void OnNazwiskoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Data_urodzenia
        {
            get
            {
                return _Data_urodzenia;
            }
            set
            {
                OnData_urodzeniaChanging(value);
                ReportPropertyChanging("Data_urodzenia");
                _Data_urodzenia = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Data_urodzenia");
                OnData_urodzeniaChanged();
            }
        }
        private global::System.String _Data_urodzenia;
        partial void OnData_urodzeniaChanging(global::System.String value);
        partial void OnData_urodzeniaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Miejsce_urodzenia
        {
            get
            {
                return _Miejsce_urodzenia;
            }
            set
            {
                OnMiejsce_urodzeniaChanging(value);
                ReportPropertyChanging("Miejsce_urodzenia");
                _Miejsce_urodzenia = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Miejsce_urodzenia");
                OnMiejsce_urodzeniaChanged();
            }
        }
        private global::System.String _Miejsce_urodzenia;
        partial void OnMiejsce_urodzeniaChanging(global::System.String value);
        partial void OnMiejsce_urodzeniaChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FilmModel", "aktor_fk", "film_aktor")]
        public EntityCollection<film_aktor> film_aktor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<film_aktor>("FilmModel.aktor_fk", "film_aktor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<film_aktor>("FilmModel.aktor_fk", "film_aktor", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FilmModel", Name="Film")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Film : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Film object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="tytul">Initial value of the Tytul property.</param>
        public static Film CreateFilm(global::System.Int32 id, global::System.String tytul)
        {
            Film film = new Film();
            film.id = id;
            film.Tytul = tytul;
            return film;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Tytul
        {
            get
            {
                return _Tytul;
            }
            set
            {
                OnTytulChanging(value);
                ReportPropertyChanging("Tytul");
                _Tytul = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Tytul");
                OnTytulChanged();
            }
        }
        private global::System.String _Tytul;
        partial void OnTytulChanging(global::System.String value);
        partial void OnTytulChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Gatunek
        {
            get
            {
                return _Gatunek;
            }
            set
            {
                OnGatunekChanging(value);
                ReportPropertyChanging("Gatunek");
                _Gatunek = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Gatunek");
                OnGatunekChanged();
            }
        }
        private global::System.String _Gatunek;
        partial void OnGatunekChanging(global::System.String value);
        partial void OnGatunekChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Produkcja
        {
            get
            {
                return _Produkcja;
            }
            set
            {
                OnProdukcjaChanging(value);
                ReportPropertyChanging("Produkcja");
                _Produkcja = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Produkcja");
                OnProdukcjaChanged();
            }
        }
        private global::System.String _Produkcja;
        partial void OnProdukcjaChanging(global::System.String value);
        partial void OnProdukcjaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Rezyseria
        {
            get
            {
                return _Rezyseria;
            }
            set
            {
                OnRezyseriaChanging(value);
                ReportPropertyChanging("Rezyseria");
                _Rezyseria = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Rezyseria");
                OnRezyseriaChanged();
            }
        }
        private global::System.String _Rezyseria;
        partial void OnRezyseriaChanging(global::System.String value);
        partial void OnRezyseriaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Scenariusz
        {
            get
            {
                return _Scenariusz;
            }
            set
            {
                OnScenariuszChanging(value);
                ReportPropertyChanging("Scenariusz");
                _Scenariusz = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Scenariusz");
                OnScenariuszChanged();
            }
        }
        private global::System.String _Scenariusz;
        partial void OnScenariuszChanging(global::System.String value);
        partial void OnScenariuszChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Rok
        {
            get
            {
                return _Rok;
            }
            set
            {
                OnRokChanging(value);
                ReportPropertyChanging("Rok");
                _Rok = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Rok");
                OnRokChanged();
            }
        }
        private global::System.String _Rok;
        partial void OnRokChanging(global::System.String value);
        partial void OnRokChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FilmModel", "film_fk", "film_aktor")]
        public EntityCollection<film_aktor> film_aktor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<film_aktor>("FilmModel.film_fk", "film_aktor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<film_aktor>("FilmModel.film_fk", "film_aktor", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FilmModel", Name="film_aktor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class film_aktor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new film_aktor object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="film">Initial value of the film property.</param>
        /// <param name="aktor">Initial value of the aktor property.</param>
        public static film_aktor Createfilm_aktor(global::System.Int32 id, global::System.Int32 film, global::System.Int32 aktor)
        {
            film_aktor film_aktor = new film_aktor();
            film_aktor.id = id;
            film_aktor.film = film;
            film_aktor.aktor = aktor;
            return film_aktor;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 film
        {
            get
            {
                return _film;
            }
            set
            {
                OnfilmChanging(value);
                ReportPropertyChanging("film");
                _film = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("film");
                OnfilmChanged();
            }
        }
        private global::System.Int32 _film;
        partial void OnfilmChanging(global::System.Int32 value);
        partial void OnfilmChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 aktor
        {
            get
            {
                return _aktor;
            }
            set
            {
                OnaktorChanging(value);
                ReportPropertyChanging("aktor");
                _aktor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("aktor");
                OnaktorChanged();
            }
        }
        private global::System.Int32 _aktor;
        partial void OnaktorChanging(global::System.Int32 value);
        partial void OnaktorChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FilmModel", "aktor_fk", "Aktor")]
        public Aktor Aktor1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Aktor>("FilmModel.aktor_fk", "Aktor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Aktor>("FilmModel.aktor_fk", "Aktor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Aktor> Aktor1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Aktor>("FilmModel.aktor_fk", "Aktor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Aktor>("FilmModel.aktor_fk", "Aktor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FilmModel", "film_fk", "Film")]
        public Film Film1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Film>("FilmModel.film_fk", "Film").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Film>("FilmModel.film_fk", "Film").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Film> Film1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Film>("FilmModel.film_fk", "Film");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Film>("FilmModel.film_fk", "Film", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
